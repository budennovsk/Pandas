import pandas as pd


data = {1: [(7, 21), (46, 60), (53, 67), (271, 285), (296, 310)], 2: [(15, 29), (17, 31), (87, 101), (141, 155), (155, 169)], 3: [(21, 35), (37, 51), (108, 122), (206, 220), (228, 242)], 4: [(35, 49), (64, 78), (142, 156), (208, 222), (334, 348)], 5: [(34, 48), (85, 99), (124, 138), (287, 301), (305, 319)], 6: [(74, 88), (141, 155), (184, 198), (212, 226), (334, 348)], 7: [(72, 86), (88, 102), (119, 133), (149, 163), (161, 175)], 8: [(57, 71), (88, 102), (244, 258), (261, 275), (308, 322)], 9: [(20, 34), (169, 183), (174, 188), (299, 313), (339, 353)], 10: [(119, 133), (175, 189), (176, 190), (277, 291), (290, 304)]}




# Создание нового словаря с замененными ключами
new_data = {f"sku_{key}": value for key, value in data.items()}

# Вывод нового словаря
for i in new_data.items():

    print(i)




# Создание списка ключей из исходного словаря
keys = list(data.keys())

# Создание списка словарей без одной строки
new_dicts = []
d = 0
for i in range(len(keys)):
    d+=1
    new_dict = {f"sku_{key}_{d}": value for key, value in data.items() if key != keys[i]}
    new_dicts.append(new_dict)
print(new_dicts)

# # Вывод списка словарей
for new_dict in new_dicts:

    print(new_dict)


# # Создание списка ключей из исходного словаря
# keys = list(data.keys())
#
# # Создание списка словарей без одной строки с добавлением префикса
# new_dicts = []
# for i in range(len(keys)):
#     new_dict = {f"sku_{i+2}_1": value for key, value in data.items() if key != keys[i]}
#     new_dicts.append(new_dict)
#
# # Вывод списка словарей
# for new_dict in new_dicts:
#     print(new_dict)

# Create a new column called 'index_promo' with empty values

import pandas as pd

# Create a new DataFrame with 3650 rows
df = pd.DataFrame({'DAYS': range(1, 3651)})

# Create a new column called 'index_promo' with empty values
df['index_promo'] = ''

# Iterate over the 'data' dictionary
for dos in new_dicts:
    for sku, ranges in dos.items():
        for start, end in ranges:
            # Expand the range and check if any value matches the 'DAYS' column
            matching_days = range(start, end + 1)
            df.loc[df['DAYS'].isin(matching_days), 'index_promo'] = sku
print(df.loc[15:30])
import pandas as pd

# Assuming you have a DataFrame `df` with the `index_promo` column
# df['res_index_promo'] = df['index_promo']
# ko = [[['sku_2_1: 0.42352940752941187', 'sku_3_1: 0.3529411799999999', 'sku_4_1: 0.3058823570196078', 'sku_5_1: 0.27176470832823524', 'sku_6_1: 0.24705882229411769', 'sku_7_1: 0.22805430057222412', 'sku_8_1: 0.2127450969754902', 'sku_9_1: 0.19999999999999998', 'sku_10_1: 0.1891764716476235'], ['sku_1_2: 0.010588235999999996', 'sku_3_2: 0.5000000099999999', 'sku_4_2: 0.43333334344444446', 'sku_5_2: 0.38500000731499995', 'sku_6_2: 0.35000000174999996', 'sku_7_2: 0.3230769290414201', 'sku_8_2: 0.3013888903958333', 'sku_9_2: 0.28333333616666656', 'sku_10_2: 0.26800000418079994'], ['sku_1_3: 0.010588235999999996', 'sku_2_3: 0.040000001999999986', 'sku_4_3: 0.5200000017333334', 'sku_5_3: 0.46199999953800003', 'sku_6_3: 0.41999999370000013', 'sku_7_3: 0.387692307095858', 'sku_8_3: 0.3616666612416668', 'sku_9_3: 0.3399999966', 'sku_10_3: 0.32159999858495997'], ['sku_1_4: 0.010588235999999996', 'sku_2_4: 0.040000001999999986', 'sku_3_4: 0.06', 'sku_5_4: 0.533076920766923', 'sku_6_4: 0.48461537573076935', 'sku_7_4: 0.4473372759271734', 'sku_8_4: 0.41730768465705137', 'sku_9_4: 0.3923076870769231', 'sku_10_4: 0.3710769202072615'], ['sku_1_5: 0.010588235999999996', 'sku_2_5: 0.040000001999999986', 'sku_3_5: 0.06', 'sku_4_5: 0.07846153799999998', 'sku_6_5: 0.545454537818182', 'sku_7_5: 0.50349650322539', 'sku_8_5: 0.46969696312121223', 'sku_9_5: 0.4415584375844156', 'sku_10_5: 0.4176623362422857'], ['sku_1_6: 0.010588235999999996', 'sku_2_6: 0.040000001999999986', 'sku_3_6: 0.06', 'sku_4_6: 0.07846153799999998', 'sku_5_6: 0.095844156', 'sku_7_6: 0.553846161301775', 'sku_8_6: 0.5166666666666666', 'sku_9_6: 0.48571428814285705', 'sku_10_6: 0.4594285762985142'], ['sku_1_7: 0.010588235999999996', 'sku_2_7: 0.040000001999999986', 'sku_3_7: 0.06', 'sku_4_7: 0.07846153799999998', 'sku_5_7: 0.095844156', 'sku_6_7: 0.11142857399999999', 'sku_8_7: 0.5597222146875002', 'sku_9_7: 0.5261904717380952', 'sku_10_7: 0.4977142842900571'], ['sku_1_8: 0.010588235999999996', 'sku_2_8: 0.040000001999999986', 'sku_3_8: 0.06', 'sku_4_8: 0.07846153799999998', 'sku_5_8: 0.095844156', 'sku_6_8: 0.11142857399999999', 'sku_7_8: 0.125714286', 'sku_9_8: 0.5640553023594469', 'sku_10_8: 0.5335299595724681'], ['sku_1_9: 0.010588235999999996', 'sku_2_9: 0.040000001999999986', 'sku_3_9: 0.06', 'sku_4_9: 0.07846153799999998', 'sku_5_9: 0.095844156', 'sku_6_9: 0.11142857399999999', 'sku_7_9: 0.125714286', 'sku_8_9: 0.139078344', 'sku_10_9: 0.5675294149428706'], ['sku_1_10: 0.010588235999999996', 'sku_2_10: 0.040000001999999986', 'sku_3_10: 0.06', 'sku_4_10: 0.07846153799999998', 'sku_5_10: 0.095844156', 'sku_6_10: 0.11142857399999999', 'sku_7_10: 0.125714286', 'sku_8_10: 0.139078344', 'sku_9_10: 0.151764708']]]
# for lo in ko:
#     for row in lo:
#         for item in row:
#             key, value = item.split(':')
#             column_name = key.split('_')[0]
#             df.loc[df[column_name] == key, 'res_index_promo'] *= float(value)
#
#

import pandas as pd
import random
ko = [['sku_9_1: 0.42352940752941187', 'sku_2_1: 0.3529411799999999', 'sku_4_1: 0.3058823570196078', 'sku_5_1: 0.27176470832823524', 'sku_6_1: 0.24705882229411769', 'sku_7_1: 0.22805430057222412', 'sku_8_1: 0.2127450969754902', 'sku_9_1: 0.19999999999999998', 'sku_10_1: 0.1891764716476235'], ['sku_1_2: 0.010588235999999996', 'sku_3_2: 0.5000000099999999', 'sku_4_2: 0.43333334344444446', 'sku_5_2: 0.38500000731499995', 'sku_6_2: 0.35000000174999996', 'sku_7_2: 0.3230769290414201', 'sku_8_2: 0.3013888903958333', 'sku_9_2: 0.28333333616666656', 'sku_10_2: 0.26800000418079994']]

print('llllllllllllllllll')
# Create a list of sku values
skus = ['sku_{}_1'.format(i) for i in range(1, 11)]
sales_reg = [i for i in range(1, 11)]

# Shuffle the list randomly
random.shuffle(skus)

# Create a DataFrame with the 'index_promo' column
df = pd.DataFrame({'index_promo': skus})

# Print the DataFrame


# df['res_index_promo'] = [item.split(': ')[1] for sublist in ko for item in sublist]
df['res_index_promo'] = ''  # Создаем новую колонку с пустыми значениями

for sublist in ko:
    for item in sublist:
        key, value = item.split(': ')
        df.loc[df['index_promo'] == key, 'res_index_promo'] = float(value)

df['sales_reg'] = sales_reg
# df['res_index_promo'].replace('', df['sales_reg'], inplace=True)

df['result'] = df['sales_reg'] * df['res_index_promo']
df['sales_reg'] = df['sales_reg'] * df['res_index_promo']
# df['result'].fillna(df['sales_reg'], inplace=True)



print(df,'____')

fod = '''        Price  Regular Sales  Stock
15   24.602377       0.000000    121
16  127.781262       0.000000    135
17   59.514777       0.000000    166
18  151.878943       0.000000     97
19  137.325786       0.000000    172
20  132.871311       0.000000    175
21   77.688104       0.277420    165
22  153.854658       0.276802     87
23  197.402522       0.327406    108
24  110.001106       0.367269    102
25   99.439109       0.328336    185
26   12.786506       0.427235     51
27  143.038716       0.236616    171
28  173.110738       0.276875    181
29   57.016865       0.268722    153
30   69.854670       0.289737     81
31  105.128634       0.351706     70
32   23.695230       0.426304     66
33   27.032070       0.452992    126
34   90.011044       0.139800    109
35   59.631601       0.184999    199
36   87.147087       0.189332    120
37   96.333397       0.198245    169
38  195.491945       0.196345     59
39  189.409366       0.272284     88
40   36.548729       0.314408    124
41  177.691335       0.164449     98
42   25.239266       0.186147     80
43  106.450739       0.226684    100
44   41.142881       0.239341    122
45   58.876867       0.000000     89
46  111.975316       0.000000    172
47   67.122444       0.000000    165
48  120.923960       0.000000     87
49  108.525269       0.000000     82
50  140.040366     
  
  0.000000    127'''


price = [114.2745657461917, 145.8859796107597, 124.52504145361233, 113.52780476941041, 90.4944118743919, 132.71988148266468, 93.14157013991158, 179.43687014859515, 193.09592449519556, 82.85388857689776, 160.42775723570628, 110.49003475305184, 117.92846660784714, 185.8633612756056, 23.49685105759852, 26.554566943292734, 13.841495513661886, 168.1977706541082, 157.8497826804716, 175.30230816689564, 195.93748502422517, 161.8401272011775, 97.68107882805705, 158.30054349442653, 32.47214091509731, 131.58499405222955, 37.23712460771881, 189.48709423942094, 109.15118113251361, 88.78576859819948, 60.265566299879126, 157.10440099250116, 96.66856312114422, 118.00245028504321, 13.570062082907477, 127.35074444441665, 126.29818731726007, 127.21745940620382, 189.3121349177786, 139.54585682966186, 78.30650110901934, 93.03607122187488, 142.54992722618033, 21.44283960956127, 136.68567593467685, 137.42119522745028, 49.97268660402977, 34.49599655442213, 69.93138667559494, 79.10504647909829, 118.33738637939713]
regular_sales = [119.24002534525653, 124.32859762761326, 111.31136022027408, 109.07064496851171, 138.5449183283274, 128.75104110194084, 129.9843656035553, 155.12205372194202, 136.49510068529278, 126.54574500151782, 163.86104278874936, 149.167223623435, 128.16679315971646, 127.46797687098135, 151.90823751653733, 196.4742879979792, 141.05096796576612, 140.8273486330461, 176.1526968344711, 142.15564619341163, 111.48151245378762, 105.70131222290627, 157.98980979369253, 142.71635345962744, 141.52251416862384, 119.18170098621574, 100.91660919909143, 106.05232222640463, 107.94704751087019, 83.233776886026, 106.00257502763988, 64.41249208311761, 77.89397498974816, 75.58301039667992, 61.17960373649264, 26.50063028497991, 75.50086296428213, 47.72774351732495, 86.06330946774007, 49.859084257097045, 43.49553534924556, 54.27761312081987, 72.16141493591869, 39.005751969222935, 70.29475389659554, 79.07997805193878, 70.89907617642862, 84.97580400508747, 80.17564753811932, 86.99637568863818, 91.63567666956544]
stock = [71, 167, 196, 146, 163, 131, 59, 144, 54, 193, 194, 127, 199, 175, 125, 131, 161, 107, 87, 155, 52, 170, 70, 70, 152, 183, 99, 119, 167, 130, 89, 67, 145, 76, 79, 189, 177, 115, 172, 96, 98, 169, 101, 177, 53, 131, 112, 54, 131, 99, 163]

res =pd.DataFrame({'price':price,'regular_sales': regular_sales, 'stock': stock})

print(res)
print('+++++++++++++++++')

import numpy as np

# Пример массива current_input
import numpy as np

# Пример исходного массива current_input
current_input = np.array([[1, 2, 3],
                          [4, 5, 6],
                          [7, 8, 9]])

# Применение np.roll() для сдвига элементов массива current_input на одну позицию влево
new_input = np.roll(current_input, shift=-1, axis=0)
print(new_input, 'res2')

# Обновление значения первого элемента последней строки в новом массиве new_input
# с помощью значения первого элемента последней строки в исходном массиве current_input
new_input[-1, 0] = current_input[-1, 0]  # цена
print(new_input, 'res____________2')

# Предположим, у нас есть предсказанное значение для продаж
predicted_value = 10

# Обновление значения второго элемента последней строки в новом массиве new_input
# с помощью предсказанного значения predicted_value
new_input[-1, 1] = predicted_value  # продажи
print(new_input, 'res____________3')

# Обновление значения третьего элемента последней строки в новом массиве new_input
# с помощью значения третьего элемента последней строки в исходном массиве current_input
new_input[-1, 2] = current_input[-1, 2]  # остаток

print(new_input)
